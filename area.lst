     1                                  %define BALL 1
     2                                  %define PARALLELEPIPED 2
     3                                  %define TETRAHEDRON 3
     4                                  
     5                                  global ball_surface_area
     6                                  ball_surface_area:
     7                                  section .data
     8 00000000 6F1283C0CA210940            .pi    dq  3.1415
     9 00000008 0000000000001040            .four   dq  4.0
    10                                  section .text
    11 00000000 55                      push rbp
    12 00000001 4889E5                  mov rbp, rsp
    13                                  
    14 00000004 8B07                        mov eax, [rel rdi]
    15 00000006 F20F2AD0                    cvtsi2sd   xmm2, eax
    16 0000000A F20F10C2                    movsd xmm0, xmm2
    17 0000000E F20F59C0                    mulsd xmm0, xmm0
    18 00000012 F20F5905(00000000)          mulsd xmm0, [rel .pi]
    19 0000001A F20F5905(08000000)          mulsd xmm0, [rel .four]
    20                                  
    21 00000022 C9                      leave
    22 00000023 C3                      ret
    23                                  
    24                                  global tetrahedron_surface_area
    25                                  tetrahedron_surface_area:
    26                                  section .data
    27 00000010 BC96900F7AB6FB3F            .h    dq  1.73205 ; ~ sqrt(3)
    28                                  section .text
    29 00000024 55                      push rbp
    30 00000025 4889E5                  mov rbp, rsp
    31                                  
    32 00000028 8B07                        mov eax, [rel rdi]
    33 0000002A F20F2AD0                    cvtsi2sd   xmm2, eax
    34 0000002E F20F10C2                    movsd xmm0, xmm2
    35 00000032 F20F59C2                    mulsd xmm0, xmm2
    36 00000036 F20F5905(10000000)          mulsd xmm0, [rel .h]
    37                                  
    38 0000003E C9                      leave
    39 0000003F C3                      ret
    40                                  
    41                                  global parallelepiped_surface_area
    42                                  parallelepiped_surface_area:
    43                                  section .data
    44 00000018 0000000000000000            .s1    dq  0.0
    45 00000020 0000000000000000            .s2    dq  0.0
    46 00000028 0000000000000040            .two   dq  2.0
    47                                  section .text
    48 00000040 55                      push rbp
    49 00000041 4889E5                  mov rbp, rsp
    50                                  
    51 00000044 8B07                        mov eax, [rel rdi]
    52 00000046 F20F2AC0                    cvtsi2sd   xmm0, eax
    53 0000004A 8B4708                      mov eax, [rel rdi+8]
    54 0000004D F20F2AD0                    cvtsi2sd   xmm2, eax
    55 00000051 F20F59C2                    mulsd xmm0, xmm2
    56 00000055 F20F1105(18000000)          movsd [rel .s1], xmm0
    57                                  
    58 0000005D 8B4704                      mov eax, [rel rdi+4]
    59 00000060 F20F2AC0                    cvtsi2sd   xmm0, eax
    60 00000064 8B4708                      mov eax, [rel rdi+8]
    61 00000067 F20F2AD0                    cvtsi2sd   xmm2, eax
    62 0000006B F20F59C2                    mulsd xmm0, xmm2
    63 0000006F F20F1105(20000000)          movsd [rel .s2], xmm0
    64                                  
    65 00000077 8B07                        mov eax, [rel rdi]
    66 00000079 F20F2AC0                    cvtsi2sd   xmm0, eax
    67 0000007D 8B4704                      mov eax, [rel rdi+4]
    68 00000080 F20F2AD0                    cvtsi2sd   xmm2, eax
    69 00000084 F20F59C2                    mulsd xmm0, xmm2
    70                                  
    71 00000088 F20F1015(18000000)          movsd xmm2, [rel .s1]
    72 00000090 F20F58C2                    addsd xmm0, xmm2
    73 00000094 F20F1015(20000000)          movsd xmm2, [rel .s2]
    74 0000009C F20F58C2                    addsd xmm0, xmm2
    75 000000A0 F20F1015(28000000)          movsd xmm2, [rel .two]
    76 000000A8 F20F59C2                    mulsd xmm0, xmm2
    77                                  
    78 000000AC C9                      leave
    79 000000AD C3                      ret
    80                                  
    81                                  global figure_surface_area
    82                                  figure_surface_area:
    83                                  section .text
    84 000000AE 55                      push rbp
    85 000000AF 4889E5                  mov rbp, rsp
    86                                  
    87 000000B2 8B07                        mov eax, [rel rdi]
    88 000000B4 3B042501000000              cmp eax, [rel BALL]
    88          ******************       warning: absolute address can not be RIP-relative
    89 000000BB 741A                        je .ball_area
    90 000000BD 3B042502000000              cmp eax, [rel PARALLELEPIPED]
    90          ******************       warning: absolute address can not be RIP-relative
    91 000000C4 741C                        je .par_area
    92 000000C6 3B042503000000              cmp eax, [rel TETRAHEDRON]
    92          ******************       warning: absolute address can not be RIP-relative
    93 000000CD 741E                        je .tetr_area
    94 000000CF 31C0                        xor eax, eax
    95 000000D1 F20F2AC0                    cvtsi2sd    xmm0, eax
    96 000000D5 EB1F                        jmp     .return
    97                                  .ball_area:
    98 000000D7 4883C704                    add     rdi, 4
    99 000000DB E820FFFFFF                  call    ball_surface_area
   100 000000E0 EB14                        jmp     .return
   101                                  .par_area:
   102 000000E2 4883C704                    add     rdi, 4
   103 000000E6 E855FFFFFF                  call    parallelepiped_surface_area
   104 000000EB EB09                        jmp     .return
   105                                  .tetr_area:
   106 000000ED 4883C704                    add     rdi, 4
   107 000000F1 E82EFFFFFF                  call    tetrahedron_surface_area
   108                                  .return:
   109 000000F6 C9                      leave
   110 000000F7 C3                      ret
   111                                  
   112                                  
   113                                  global AreaAverageContainer
   114                                  AreaAverageContainer:
   115                                  section .data
   116 00000030 0000000000000000            .sum    dq  0.0
   117                                  section .text
   118 000000F8 55                      push rbp
   119 000000F9 4889E5                  mov rbp, rsp
   120                                  
   121                                      ; В rdi адрес начала контейнера
   122 000000FC 4889F3                      mov rbx, rsi            ; число фигур
   123 000000FF 4831C9                      xor rcx, rcx            ; счетчик фигур
   124 00000102 F20F100D(30000000)          movsd xmm1, [rel .sum]      ; перенос накопителя суммы в регистр 1
   125                                  .loop:
   126 0000010A 4839D9                      cmp rcx, rbx            ; проверка на окончание цикла
   127 0000010D 7D18                        jge .return             ; Перебрали все фигуры
   128                                  
   129 0000010F 4989FA                      mov r10, rdi            ; сохранение начала фигуры
   130 00000112 E897FFFFFF                  call figure_surface_area          ; Получение периметра первой фигуры
   131 00000117 F20F58C8                    addsd xmm1, xmm0        ; накопление суммы
   132                                      
   133 0000011B 48FFC1                      inc rcx                 ; индекс следующей фигуры
   134 0000011E 4983C210                    add r10, 16             ; адрес следующей фигуры
   135 00000122 4C89D7                      mov rdi, r10            ; восстановление для передачи параметра
   136 00000125 EBE3                        jmp .loop
   137                                  .return:
   138 00000127 F20F10C1                    movsd xmm0, xmm1
   139 0000012B F2480F2ACB                  cvtsi2sd xmm1, rbx
   140 00000130 F20F5EC1                    divsd xmm0, xmm1
   141 00000134 C9                      leave
   142 00000135 C3                      ret
   143                                  
   144                                  global DeleteLessAverageContainer
   145                                  DeleteLessAverageContainer:
   146                                  section .data
   147 00000038 0000000000000000            .sum    dq  0.0
   148                                  section .text
   149 00000136 55                      push rbp
   150 00000137 4889E5                  mov rbp, rsp
   151                                  
   152                                      ; В rdi адрес начала контейнера
   153 0000013A 4889F3                      mov rbx, rsi            ; число фигур
   154 0000013D 4D31ED                      xor r13, r13            ; счетчик оставленных фигур
   155 00000140 4831C9                      xor rcx, rcx            ; счетчик фигур
   156 00000143 F20F100D(38000000)          movsd xmm1, [rel .sum]      ; перенос накопителя суммы в регистр 1
   157 0000014B 4989FB                      mov r11, rdi            ; сохранение начала первой фигуры
   158 0000014E 4989FC                      mov r12, rdi            ; сохранение начала последней сохранённой фигуры
   159                                  .loop:
   160 00000151 4839D9                      cmp rcx, rbx            ; проверка на окончание цикла
   161 00000154 7D18                        jge .delete             ; Перебрали все фигуры
   162                                  
   163 00000156 4989FA                      mov r10, rdi            ; сохранение начала фигуры
   164 00000159 E850FFFFFF                  call figure_surface_area          ; Получение периметра первой фигуры
   165 0000015E F20F58C8                    addsd xmm1, xmm0        ; накопление суммы
   166                                      
   167 00000162 48FFC1                      inc rcx                 ; индекс следующей фигуры
   168 00000165 4983C210                    add r10, 16             ; адрес следующей фигуры
   169 00000169 4C89D7                      mov rdi, r10            ; восстановление для передачи параметра
   170 0000016C EBE3                        jmp .loop
   171                                  .delete:
   172 0000016E F20F10C1                    movsd xmm0, xmm1
   173 00000172 F2480F2ACB                  cvtsi2sd xmm1, rbx
   174 00000177 F20F5EC1                    divsd xmm0, xmm1
   175 0000017B F20F10C8                    movsd xmm1, xmm0
   176                                      ; xmm1 хранит среднюю площадь.
   177 0000017F 4831C9                      xor rcx, rcx
   178 00000182 4C89DF                      mov rdi, r11
   179                                  .loop2:
   180 00000185 4839D9                      cmp rcx, rbx            ; проверка на окончание цикла
   181 00000188 7D42                        jge .return             ; Перебрали все фигуры
   182                                  
   183 0000018A 4989FA                      mov r10, rdi            ; сохранение начала фигуры
   184 0000018D E81CFFFFFF                  call figure_surface_area          ; Получение периметра первой фигуры
   185 00000192 660F2FC1                    comisd xmm0, xmm1
   186 00000196 7228                        jb .removeShape
   187 00000198 49FFC5                      inc r13
   188 0000019B 4C89E6                      mov rsi, r12
   189                                      ; move to last free spot.
   190 0000019E 498B3A                      mov rdi, [rel r10]
   191 000001A1 48893E                      mov [rel rsi], rdi
   192 000001A4 498B7A04                    mov rdi, [rel r10+4]
   193 000001A8 48897E04                    mov [rel rsi+4], rdi
   194 000001AC 498B7A08                    mov rdi, [rel r10+8]
   195 000001B0 48897E08                    mov [rel rsi+8], rdi
   196 000001B4 498B7A0C                    mov rdi, [rel r10+12]
   197 000001B8 48897E0C                    mov [rel rsi+12], rdi
   198                                      
   199 000001BC 4983C410                    add r12, 16
   200                                  .removeShape:
   201 000001C0 48FFC1                      inc rcx                 ; индекс следующей фигуры
   202 000001C3 4983C210                    add r10, 16             ; адрес следующей фигуры
   203 000001C7 4C89D7                      mov rdi, r10            ; восстановление для передачи параметра
   204 000001CA EBB9                        jmp .loop2
   205                                  .return:
   206 000001CC 4C89E8                      mov rax, r13
   207 000001CF C9                      leave
   208 000001D0 C3                      ret
